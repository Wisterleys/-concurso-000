{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/core/base.service.ts","./src/app/services/registration.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:\"http://localhost:8000/api/v1\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { RegistrationService } from './services/registration.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'concurso';\n\n  constructor(\n    public service: RegistrationService\n  ){\n    this.service.getRegistration().subscribe(\n      (value:any)=>{\n        console.log(value);\n\n      }\n    );\n    this.service.getCities().subscribe(\n      (value:any)=>{\n        console.log(value);\n\n      }\n    );\n  }\n  \n}\n","<h1>Wisterley</h1>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, Injector } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GenericResult } from 'src/app/models/core/generic-result.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService<T> {\n  private http: HttpClient;\n  private apiUrl: string\n\n  constructor(\n    protected injector: Injector\n  ) {\n    this.http = this.injector.get(HttpClient);\n    this.apiUrl = `${environment.baseUrl}`;\n  }\n  get(endpoint:string):Observable<GenericResult>{\n    return this.http.get<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\n  }\n  post(endpoint:string,body: T):Observable<GenericResult>{\n    return this.http.post<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\n  }\n  put(endpoint:string,body: T):Observable<GenericResult>{\n    return this.http.put<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\n  }\n  delete(endpoint:string):Observable<GenericResult>{\n    return this.http.delete<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\n  }\n  patch(endpoint:string):Observable<GenericResult>{\n    return this.http.patch<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\n  }\n\n\n  private getHeaders(): HttpHeaders {\n    const headers = new HttpHeaders()\n        .set('Accept', 'application/json')\n        .set('Content-Type', 'application/json')\n    return headers;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseService } from './core/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService extends BaseService<any>{\n\n\n  constructor(\n    protected injector: Injector\n  ) {\n    super(injector);\n   }\n\n   getRegistration():any{\n    return this.get('/inscricao');\n   }\n\n   getCities():any{\n    return this.get('/cidadeuf');\n   }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}