{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/core/base.service.ts","./src/app/pages/registration/registration.component.ts","./src/app/pages/registration/registration.component.html","./src/app/services/registration.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAC,8BAA8B;CACvC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IAGvB,YACS,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QAHrC,UAAK,GAAG,UAAU,CAAC;QAKjB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,SAAS,CACtC,CAAC,KAAS,EAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAErB,CAAC,CACF,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAChC,CAAC,KAAS,EAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAErB,CAAC,CACF,CAAC;IACJ,CAAC;;wEAlBU,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACS;AAC4B;;AAiB7E,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAHb,EAEV,YAPQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;mIAMU,SAAS,mBAblB,2DAAY;QACZ,gGAAqB,aAGrB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;ACfpB;AAAA;AAAA;AAAA;AAAA;AAA2D;AACI;;AAOxD,MAAM,WAAW;IAItB,YACY,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAE5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+DAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,GAAG,wEAAW,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IACD,GAAG,CAAC,QAAe;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,MAAM,GAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;IACvF,CAAC;IACD,IAAI,CAAC,QAAe,EAAC,IAAO;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,IAAI,CAAC,MAAM,GAAC,QAAQ,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;IAC7F,CAAC;IACD,GAAG,CAAC,QAAe,EAAC,IAAO;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,MAAM,GAAC,QAAQ,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;IAC5F,CAAC;IACD,MAAM,CAAC,QAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAgB,IAAI,CAAC,MAAM,GAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;IAC1F,CAAC;IACD,KAAK,CAAC,QAAe;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAgB,IAAI,CAAC,MAAM,GAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;IACzF,CAAC;IAGO,UAAU;QAChB,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;aACjC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;QAC5C,OAAO,OAAO,CAAC;IACjB,CAAC;;sEAhCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;ACAb,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;;;;;;;;;;;;;;ACC1B;AAAA;AAAA;AAAA;AAAkD;;AAK3C,MAAM,mBAAoB,SAAQ,8DAAgB;IAGvD,YACY,QAAkB;QAE5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAFN,aAAQ,GAAR,QAAQ,CAAU;IAG7B,CAAC;IAED,eAAe;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC/B,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9B,CAAC;;sFAfS,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC6B;;;AAEpF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,gGAAqB,EAAC;CAC1C,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACVuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl:\"http://localhost:8000/api/v1\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { RegistrationService } from './services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'concurso';\r\n\r\n  constructor(\r\n    public service: RegistrationService\r\n  ){\r\n    this.service.getRegistration().subscribe(\r\n      (value:any)=>{\r\n        console.log(value);\r\n\r\n      }\r\n    );\r\n    this.service.getCities().subscribe(\r\n      (value:any)=>{\r\n        console.log(value);\r\n\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GenericResult } from 'src/app/models/core/generic-result.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService<T> {\r\n  private http: HttpClient;\r\n  private apiUrl: string\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    this.http = this.injector.get(HttpClient);\r\n    this.apiUrl = `${environment.baseUrl}`;\r\n  }\r\n  get(endpoint:string):Observable<GenericResult>{\r\n    return this.http.get<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n  post(endpoint:string,body: T):Observable<GenericResult>{\r\n    return this.http.post<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\r\n  }\r\n  put(endpoint:string,body: T):Observable<GenericResult>{\r\n    return this.http.put<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\r\n  }\r\n  delete(endpoint:string):Observable<GenericResult>{\r\n    return this.http.delete<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n  patch(endpoint:string):Observable<GenericResult>{\r\n    return this.http.patch<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const headers = new HttpHeaders()\r\n        .set('Accept', 'application/json')\r\n        .set('Content-Type', 'application/json')\r\n    return headers;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>registration works!</p>\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BaseService } from './core/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService extends BaseService<any>{\r\n\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n   }\r\n\r\n   getRegistration():any{\r\n    return this.get('/inscricao');\r\n   }\r\n\r\n   getCities():any{\r\n    return this.get('/cidadeuf');\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\n\r\nconst routes: Routes = [\r\n  {path:\"\",component:RegistrationComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}