{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/core/base.service.ts","./src/app/pages/registration/registration.component.ts","./src/app/pages/registration/registration.component.html","./src/app/services/registration.service.ts","./src/app/app-routing.module.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl:\"http://localhost:8000/api/v1\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { RegistrationService } from './services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'concurso';\r\n  \r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\nimport { FormComponent } from './components/form/form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent,\r\n    FormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GenericResult } from 'src/app/models/core/generic-result.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService<T> {\r\n  private http: HttpClient;\r\n  private apiUrl: string\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    this.http = this.injector.get(HttpClient);\r\n    this.apiUrl = `${environment.baseUrl}`;\r\n  }\r\n  get(endpoint:string):Observable<GenericResult>{\r\n    return this.http.get<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n  post(endpoint:string,body: T):Observable<GenericResult>{\r\n    return this.http.post<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\r\n  }\r\n  put(endpoint:string,body: T):Observable<GenericResult>{\r\n    return this.http.put<GenericResult>(this.apiUrl+endpoint,body,{headers:this.getHeaders()})\r\n  }\r\n  delete(endpoint:string):Observable<GenericResult>{\r\n    return this.http.delete<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n  patch(endpoint:string):Observable<GenericResult>{\r\n    return this.http.patch<GenericResult>(this.apiUrl+endpoint,{headers:this.getHeaders()})\r\n  }\r\n\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const headers = new HttpHeaders()\r\n        .set('Accept', 'application/json')\r\n        .set('Content-Type', 'application/json')\r\n    return headers;\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { CityContractModel } from 'src/app/models/city-contract.model';\r\nimport { StateContractModel } from 'src/app/models/state-contract.model';\r\nimport { FormContractModel } from 'src/app/models/form-contract.model';\r\nimport { RegistrationService } from 'src/app/services/registration.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  public formTile:string=\"Inscrição do canditado\";\r\n  public submitTile: string=\"Salvar inscrição\";\r\n  public isLoading:boolean=false;\r\n  @Output() isBtnLoading:EventEmitter<boolean> = new EventEmitter();\r\n  public cities:Array<CityContractModel>=[];\r\n  public states:Array<StateContractModel>=[];\r\n  constructor(\r\n    private service:RegistrationService \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n   /*  this.service.getRegistration().subscribe(\r\n      (value:any)=>{\r\n        console.log(value);\r\n\r\n      }\r\n    ); */\r\n    this.service.getCities().subscribe(\r\n      (value:any)=>{\r\n        this.cities = value.data.cities;\r\n        this.states = value.data.states;\r\n        console.log(\"kd os dados?\",this.states);\r\n\r\n      }\r\n    );\r\n  }\r\n  onSubmit(value:FormContractModel){\r\n    console.log(value)\r\n    setTimeout(() => {\r\n      this.isBtnLoading.emit(false);\r\n    }, 2000);\r\n  }\r\n  onIsFormLoading(value:boolean){\r\n    this.isLoading=value;\r\n    console.log(value)\r\n  }\r\n\r\n}\r\n","\r\n    <section class=\"container\">\r\n        <header class=\"mb-5 mt-5 row col-12 text-center\">\r\n            <h1 class=\"col-12\">Concurso público para desenvolvedor de Software</h1> \r\n        </header>\r\n        <main class=\"m-3\" *ngIf=\"states.length\">\r\n            <app-form \r\n            [title]=\"formTile\" \r\n            [submitTile]=\"submitTile\" \r\n            (dataForm)=\"onSubmit($event)\"\r\n            [btnLoading]=\"isBtnLoading\"\r\n            [cities]=\"cities\"\r\n            [states]=\"states\"\r\n            ></app-form>\r\n        </main>\r\n        <footer>\r\n    \r\n        </footer>\r\n    </section>\r\n\r\n\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BaseService } from './core/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService extends BaseService<any>{\r\n\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n   }\r\n\r\n   getRegistration():any{\r\n    return this.get('/inscricao');\r\n   }\r\n\r\n   getCities():any{\r\n    return this.get('/cidadeuf');\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\n\r\nconst routes: Routes = [\r\n  {path:\"\",component:RegistrationComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, EventEmitter, Input, OnInit, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { CityContractModel } from 'src/app/models/city-contract.model';\r\nimport { FormContractModel } from 'src/app/models/form-contract.model';\r\nimport { StateContractModel } from 'src/app/models/state-contract.model';\r\nimport { cpf } from 'cpf-cnpj-validator';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss']\r\n})\r\nexport class FormComponent implements OnInit,OnChanges {\r\n  @Input() title:string='';\r\n  @Input() submitTile:string='';\r\n  @Input() cities:Array<CityContractModel>=[];\r\n  @Input() states:Array<StateContractModel>=[];\r\n  @Input() btnLoading?:EventEmitter<boolean>;\r\n  public isBtnLoading:boolean=false;\r\n  @Output() dataForm: EventEmitter<FormContractModel> = new EventEmitter();\r\n  public selectedState?:number;\r\n  public selectedCities:Array<CityContractModel>=[];\r\n  public formData:FormContractModel={};\r\n  private validadeDefaultMessage =\"Ops! Precisa informar\"\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.btnLoading?.subscribe(\r\n      (value:boolean)=>{\r\n        this.isBtnLoading=value;\r\n      }\r\n    )\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('Propriedade \"dados\" foi atualizada:', this.isBtnLoading);\r\n  }\r\n  \r\n  formDataAssignValues(key:string,value:any){\r\n    switch (key) {\r\n      case 'CPF':\r\n        this.formData.CPF= value.replace(/[\\ \\/\\.\\-\\\\]/g,\"\").trimStart().trimEnd();\r\n        break;\r\n      case 'Nome completo':\r\n      case 'Nome':\r\n      case 'Name':\r\n        this.formData.name = value;\r\n        break;\r\n      case 'Cargo':\r\n        this.formData.job = value;\r\n        break;\r\n      case 'Estado':\r\n        this.formData.stateId = parseInt(value);\r\n        break;\r\n      case 'Cidade':\r\n        this.formData.cityId = parseInt(value);\r\n        break;\r\n    }\r\n  }\r\n  realTimeValidateNameInput(event: Event) {\r\n    let value = (<HTMLSelectElement>event.target).value;\r\n    value = value.replace(/^[a-zA-ZÀ-ÖØ-öø-ÿ]+([ '-][a-zA-ZÀ-ÖØ-öø-ÿ]+)*$/, function (match) {\r\n      return match.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n    });\r\n    (<HTMLSelectElement>event.target).value = value;\r\n  }\r\n  \r\n  maskCpf(value:Event){\r\n    let str = (<HTMLInputElement>value.target).value;\r\n    (<HTMLInputElement>value.target).value = str.replace(/\\D/g,'')\r\n    .replace(/([\\d]{3})(\\d)/,'$1.$2')\r\n    .replace(/([\\d]{3})(\\d)/,'$1.$2')\r\n    .replace(/([\\d]{3})(\\d{1,2})/,'$1-$2')\r\n    .replace(/(-[\\d]{2})\\d+?$/,'$1');\r\n  }\r\n  validateCpf():boolean{\r\n    \r\n    let elCpf = <HTMLInputElement>document.querySelector(\".validate-cpf\");\r\n    let label = elCpf.parentNode!.querySelector('label')!.innerHTML;\r\n    let isCpf:boolean=cpf.isValid(elCpf.value);\r\n    if(elCpf.value==null||elCpf.value==''){\r\n      elCpf.parentNode!.querySelector('small')!.innerHTML=`${this.validadeDefaultMessage} ${label}!`;\r\n      elCpf.parentNode!.querySelector('small')!.hidden=false;\r\n      \r\n    }else if(!isCpf){\r\n      elCpf.parentNode!.querySelector('small')!.innerHTML=`CPF inválido!`;\r\n      elCpf.parentNode!.querySelector('small')!.hidden=false;\r\n      \r\n      \r\n    }else{\r\n      isCpf=true;\r\n      elCpf.parentNode!.querySelector('small')!.hidden=true;\r\n      this.formDataAssignValues(label,elCpf.value);\r\n    }\r\n    return isCpf;\r\n  }\r\n  validateForm():boolean{\r\n    let isOk=true;\r\n    \r\n    document.querySelectorAll('.validate').forEach((e)=>{\r\n      let el=(<HTMLInputElement>e).value;\r\n      let label = e.parentNode!.querySelector('label')!.innerHTML;\r\n      if(el==null||el==''){\r\n        isOk=false\r\n        e.parentNode!.querySelector('small')!.innerHTML=`${this.validadeDefaultMessage} ${label}!`;\r\n        e.parentNode!.querySelector('small')!.hidden=false;\r\n      }else{\r\n        e.parentNode!.querySelector('small')!.hidden=true;\r\n        this.formDataAssignValues(label,el);\r\n      }\r\n    });\r\n\r\n    \r\n    return isOk;\r\n  }\r\n  onSelectedState(event:Event){\r\n    let value =(<HTMLSelectElement>event.target).value;\r\n    if(value!=null){\r\n      this.selectedState = parseInt(value);\r\n      this.selectedCities = this.cities.filter(c=>c.estado_id==this.selectedState);\r\n    }\r\n\r\n  }\r\n  submit(){\r\n    if(this.validateForm()&&this.validateCpf()){\r\n      this.isBtnLoading=true;\r\n      this.dataForm.emit(this.formData)\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"col-12\">\r\n    <div class=\"row\">\r\n        <h2 class=\"mb-5 mt-5 text-center\">\r\n            {{title}}\r\n        </h2>\r\n        <div class=\"col-md-6 col-sm-12 row\">\r\n            <div class=\"form-group required mb-3 col-12\">\r\n                <label for=\"exampleInputEmail1\">Nome completo</label>\r\n                <input (input)=\"realTimeValidateNameInput($event)\" [disabled]=\"isBtnLoading\" type=\"text\" class=\"form-control validate\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Digite seu nome...\">\r\n                <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar o nome!</small>\r\n            </div>\r\n            <div class=\"form-group required mb-3 col-12 \">\r\n                <label for=\"exampleInputEmail1\">Endereço</label>\r\n                <input [disabled]=\"isBtnLoading\" type=\"email\" class=\"form-control validate\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Digite seu e-mail...\">\r\n                <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar o endereço!.</small>\r\n            </div>\r\n            <div class=\"form-group required mb-3 col-12\">\r\n                <label for=\"exampleInputEmail1\">Cargo</label>\r\n                <input [disabled]=\"isBtnLoading\" type=\"email\" class=\"form-control validate\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Informe seu cardo...\">\r\n                <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar o cargo!</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12\">\r\n            <div class=\"form-group required mb-3 col-12\">\r\n                <label for=\"exampleInputEmail1\">CPF</label>\r\n                <input \r\n                [disabled]=\"isBtnLoading\"\r\n                 type=\"text\" \r\n                 class=\"form-control validate-cpf\"\r\n                  (input)=\"maskCpf($event)\"\r\n                  placeholder=\"Informe seu CPF...\">\r\n                <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar o CPF!</small>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group required mb-3 col-6\">\r\n                    <label for=\"exampleInputEmail1\">Estado</label>\r\n                    <select [disabled]=\"isBtnLoading\" class=\"form-select validate\" id=\"\" (change)=\"onSelectedState($event)\">\r\n                        <option value=\"\"></option>\r\n                        <option *ngFor=\"let s of states\" [value]=\"s.estado_id\">{{s.nome}}</option>\r\n                    </select>\r\n                    <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar um estado!</small>\r\n                </div>\r\n                <div class=\"form-group required mb-3 col-6\">\r\n                    <label for=\"exampleInputEmail1\">Cidade</label>\r\n                    <select [disabled]=\"isBtnLoading\" class=\"form-select validate\" id=\"\">\r\n                        <option value=\"\"></option>\r\n                        <option *ngFor=\"let c of selectedCities\" [value]=\"c.cidade_id\">{{c.nome}}</option>\r\n                    </select>\r\n                    <small hidden id=\"emailHelp\" class=\"text-danger\">Ops! Precisa informar uma cidade!</small>\r\n                    \r\n                </div>\r\n            </div>\r\n    \r\n        </div>\r\n      \r\n        \r\n        <div class=\"row\">\r\n            <div class=\"col-8\"></div>\r\n            <div class=\"col-4\">\r\n                <button *ngIf=\"!isBtnLoading\" type=\"submit\" class=\"btn btn-success w-100 p-2\" (click)=\"submit()\">{{submitTile}}</button>\r\n                <button *ngIf=\"isBtnLoading\" type=\"submit\" class=\"btn btn-success w-100 p-1\">\r\n                    <div class=\"spinner-border text-warning\" role=\"status\">\r\n                  </div></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}